//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/Input/UIInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @UIInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @UIInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""UIInputActions"",
    ""maps"": [
        {
            ""name"": ""UI"",
            ""id"": ""05586f89-8d14-40ce-b5b1-ec7c2dde593e"",
            ""actions"": [
                {
                    ""name"": ""MouseNavigation"",
                    ""type"": ""Value"",
                    ""id"": ""65a7dc1b-e38f-437f-af7e-236513277167"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LeftMouseClick"",
                    ""type"": ""Button"",
                    ""id"": ""0e6052ea-d915-4713-b044-d0762d1eae03"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightMouseClick"",
                    ""type"": ""Button"",
                    ""id"": ""d46403f3-ea9e-4738-b889-6132cf5d4740"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseScroll"",
                    ""type"": ""Value"",
                    ""id"": ""3d2c957b-2c04-4162-af7d-80e898b7a807"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LeftMouseHeld"",
                    ""type"": ""Button"",
                    ""id"": ""cdb56c94-1b63-4843-8f53-312175222660"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightMouseHeld"",
                    ""type"": ""Button"",
                    ""id"": ""e9b28aa1-33c1-4eac-a021-d82ce651819f"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftMouseDoubleClick"",
                    ""type"": ""Button"",
                    ""id"": ""795d2206-7858-4e3e-a576-61b48d5815d7"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""44879732-5c28-4309-ba3b-60adf4216217"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Default"",
                    ""action"": ""MouseNavigation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c76b5a5b-d98d-43ff-a1fc-2bfaab66cc57"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Default"",
                    ""action"": ""LeftMouseClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0550cbad-0209-4b68-b167-81a89fa09a51"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Default"",
                    ""action"": ""RightMouseClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""759efcfa-6be0-407c-a6de-745c702b0bae"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ec789cf8-6412-470a-b6f5-9e8d97b1e8ad"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftMouseHeld"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3eb1f230-5955-4511-aac6-54fd89c04132"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightMouseHeld"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""61519704-4fa0-4ec9-836e-44efe8039be5"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""MultiTap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftMouseDoubleClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Default"",
            ""bindingGroup"": ""Default"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_MouseNavigation = m_UI.FindAction("MouseNavigation", throwIfNotFound: true);
        m_UI_LeftMouseClick = m_UI.FindAction("LeftMouseClick", throwIfNotFound: true);
        m_UI_RightMouseClick = m_UI.FindAction("RightMouseClick", throwIfNotFound: true);
        m_UI_MouseScroll = m_UI.FindAction("MouseScroll", throwIfNotFound: true);
        m_UI_LeftMouseHeld = m_UI.FindAction("LeftMouseHeld", throwIfNotFound: true);
        m_UI_RightMouseHeld = m_UI.FindAction("RightMouseHeld", throwIfNotFound: true);
        m_UI_LeftMouseDoubleClick = m_UI.FindAction("LeftMouseDoubleClick", throwIfNotFound: true);
    }

    ~@UIInputActions()
    {
        UnityEngine.Debug.Assert(!m_UI.enabled, "This will cause a leak and performance issues, UIInputActions.UI.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // UI
    private readonly InputActionMap m_UI;
    private List<IUIActions> m_UIActionsCallbackInterfaces = new List<IUIActions>();
    private readonly InputAction m_UI_MouseNavigation;
    private readonly InputAction m_UI_LeftMouseClick;
    private readonly InputAction m_UI_RightMouseClick;
    private readonly InputAction m_UI_MouseScroll;
    private readonly InputAction m_UI_LeftMouseHeld;
    private readonly InputAction m_UI_RightMouseHeld;
    private readonly InputAction m_UI_LeftMouseDoubleClick;
    public struct UIActions
    {
        private @UIInputActions m_Wrapper;
        public UIActions(@UIInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @MouseNavigation => m_Wrapper.m_UI_MouseNavigation;
        public InputAction @LeftMouseClick => m_Wrapper.m_UI_LeftMouseClick;
        public InputAction @RightMouseClick => m_Wrapper.m_UI_RightMouseClick;
        public InputAction @MouseScroll => m_Wrapper.m_UI_MouseScroll;
        public InputAction @LeftMouseHeld => m_Wrapper.m_UI_LeftMouseHeld;
        public InputAction @RightMouseHeld => m_Wrapper.m_UI_RightMouseHeld;
        public InputAction @LeftMouseDoubleClick => m_Wrapper.m_UI_LeftMouseDoubleClick;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void AddCallbacks(IUIActions instance)
        {
            if (instance == null || m_Wrapper.m_UIActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UIActionsCallbackInterfaces.Add(instance);
            @MouseNavigation.started += instance.OnMouseNavigation;
            @MouseNavigation.performed += instance.OnMouseNavigation;
            @MouseNavigation.canceled += instance.OnMouseNavigation;
            @LeftMouseClick.started += instance.OnLeftMouseClick;
            @LeftMouseClick.performed += instance.OnLeftMouseClick;
            @LeftMouseClick.canceled += instance.OnLeftMouseClick;
            @RightMouseClick.started += instance.OnRightMouseClick;
            @RightMouseClick.performed += instance.OnRightMouseClick;
            @RightMouseClick.canceled += instance.OnRightMouseClick;
            @MouseScroll.started += instance.OnMouseScroll;
            @MouseScroll.performed += instance.OnMouseScroll;
            @MouseScroll.canceled += instance.OnMouseScroll;
            @LeftMouseHeld.started += instance.OnLeftMouseHeld;
            @LeftMouseHeld.performed += instance.OnLeftMouseHeld;
            @LeftMouseHeld.canceled += instance.OnLeftMouseHeld;
            @RightMouseHeld.started += instance.OnRightMouseHeld;
            @RightMouseHeld.performed += instance.OnRightMouseHeld;
            @RightMouseHeld.canceled += instance.OnRightMouseHeld;
            @LeftMouseDoubleClick.started += instance.OnLeftMouseDoubleClick;
            @LeftMouseDoubleClick.performed += instance.OnLeftMouseDoubleClick;
            @LeftMouseDoubleClick.canceled += instance.OnLeftMouseDoubleClick;
        }

        private void UnregisterCallbacks(IUIActions instance)
        {
            @MouseNavigation.started -= instance.OnMouseNavigation;
            @MouseNavigation.performed -= instance.OnMouseNavigation;
            @MouseNavigation.canceled -= instance.OnMouseNavigation;
            @LeftMouseClick.started -= instance.OnLeftMouseClick;
            @LeftMouseClick.performed -= instance.OnLeftMouseClick;
            @LeftMouseClick.canceled -= instance.OnLeftMouseClick;
            @RightMouseClick.started -= instance.OnRightMouseClick;
            @RightMouseClick.performed -= instance.OnRightMouseClick;
            @RightMouseClick.canceled -= instance.OnRightMouseClick;
            @MouseScroll.started -= instance.OnMouseScroll;
            @MouseScroll.performed -= instance.OnMouseScroll;
            @MouseScroll.canceled -= instance.OnMouseScroll;
            @LeftMouseHeld.started -= instance.OnLeftMouseHeld;
            @LeftMouseHeld.performed -= instance.OnLeftMouseHeld;
            @LeftMouseHeld.canceled -= instance.OnLeftMouseHeld;
            @RightMouseHeld.started -= instance.OnRightMouseHeld;
            @RightMouseHeld.performed -= instance.OnRightMouseHeld;
            @RightMouseHeld.canceled -= instance.OnRightMouseHeld;
            @LeftMouseDoubleClick.started -= instance.OnLeftMouseDoubleClick;
            @LeftMouseDoubleClick.performed -= instance.OnLeftMouseDoubleClick;
            @LeftMouseDoubleClick.canceled -= instance.OnLeftMouseDoubleClick;
        }

        public void RemoveCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUIActions instance)
        {
            foreach (var item in m_Wrapper.m_UIActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UIActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UIActions @UI => new UIActions(this);
    private int m_DefaultSchemeIndex = -1;
    public InputControlScheme DefaultScheme
    {
        get
        {
            if (m_DefaultSchemeIndex == -1) m_DefaultSchemeIndex = asset.FindControlSchemeIndex("Default");
            return asset.controlSchemes[m_DefaultSchemeIndex];
        }
    }
    public interface IUIActions
    {
        void OnMouseNavigation(InputAction.CallbackContext context);
        void OnLeftMouseClick(InputAction.CallbackContext context);
        void OnRightMouseClick(InputAction.CallbackContext context);
        void OnMouseScroll(InputAction.CallbackContext context);
        void OnLeftMouseHeld(InputAction.CallbackContext context);
        void OnRightMouseHeld(InputAction.CallbackContext context);
        void OnLeftMouseDoubleClick(InputAction.CallbackContext context);
    }
}
